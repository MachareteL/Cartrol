import { CheckCircleIcon, XCircleIcon } from "@heroicons/react/24/outline";
import {
  Paper,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
} from "@mui/material";
import Head from "next/head";
import InfiniteScroll from "react-infinite-scroll-component";
import Moment from "react-moment";
import Loading from "~/components/Loading";
import { api } from "~/utils/api";
import { Inter } from "next/font/google";
import Card from "~/components/Card";
import Image from "next/image";
import drivingpana from "public/driving-pana.svg";
import { useState } from "react";
import Modal from "~/components/Modal";

export const inter = Inter({
  subsets: ["cyrillic"],
});
export default function Home() {
  const [open, setOpen] = useState(false);
  const [vehicleDetail, setVehicleDetail] = useState<Vehicle>();
  const { data, isError, isLoading, hasNextPage, fetchNextPage } =
    api.vehicles.getAll.useInfiniteQuery(
      {},
      {
        getNextPageParam: (lastpage) => lastpage.nextCursor,
      }
    );
  const { data: amount } = api.vehicles.getTotal.useQuery();

  if (isLoading) {
    return <Loading />;
  }
  if (isError) {
    return <>Houve um erro, fale com o Lucas</>;
  }
  if (!data) {
    return <>Cadaste um novo veículo para ver aqui as informações</>;
  }
  const vehicleList = data.pages.flatMap((page) => page.vehicles);
  vehicleList.map(({ createdAt, sign }) => {
    console.log({ placa: sign, data: createdAt });
  });

  return (
    <>
      <Head>
        <title>Cartrol</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Modal
        isOpen={open}
        closeModal={() => {
          setOpen(false);
        }}
        vehicle={vehicleDetail}
      />
      <div className="container mx-auto mt-24 space-y-4 px-4">
        <div className="flex">
          <Card className="flex">
            <div>
              <h1 className="text-gray-600">Veículos Cadastrados</h1>
              <h1 className="text-xl font-extrabold">{amount}</h1>
            </div>
            <div>
              <Image src={drivingpana} alt="" className="w-20" />
            </div>
          </Card>
        </div>
        <Card>
          <InfiniteScroll
            loader={<Loading />}
            next={fetchNextPage}
            hasMore={hasNextPage ?? false}
            dataLength={vehicleList.length}
          >
            <TableContainer
              component={Paper}
              className="border border-gray-300 shadow-md"
            >
              <Table>
                <TableHead>
                  <TableCell
                    className={`font-bold ${inter.className} text-base`}
                  >
                    Protocolo
                  </TableCell>
                  <TableCell
                    className={`font-extrabold ${inter.className} text-base`}
                  >
                    Placa
                  </TableCell>
                  <TableCell
                    className={`font-extrabold ${inter.className} text-base`}
                  >
                    Modelo
                  </TableCell>
                  <TableCell
                    className={`font-extrabold ${inter.className} text-base`}
                  >
                    Cliente
                  </TableCell>
                  <TableCell
                    className={`font-extrabold ${inter.className} text-base`}
                  >
                    Data de Entrada
                  </TableCell>
                  <TableCell
                    className={`font-extrabold ${inter.className} text-base`}
                    padding="checkbox"
                  >
                    Pátio
                  </TableCell>
                  <TableCell
                    className={`font-extrabold ${inter.className} text-base`}
                  >
                    Data de Saída
                  </TableCell>
                </TableHead>
                <TableBody>
                  {vehicleList.map((vehicle) => (
                    <TableRow
                      key={vehicle.id}
                      className="cursor-pointer transition-all odd:bg-stone-50 hover:bg-blue-100"
                      onClick={() => {
                        setVehicleDetail(vehicle);
                        setOpen(true);
                      }}
                    >
                      <TableCell component="th" scope="row">
                        {vehicle.protocol}
                      </TableCell>
                      <TableCell>{vehicle.sign}</TableCell>
                      <TableCell>{vehicle.modelName}</TableCell>
                      <TableCell>{vehicle.costumerName}</TableCell>
                      <TableCell>
                        <Moment format="DD/MM/YYYY">{vehicle.createdAt}</Moment>
                      </TableCell>
                      <TableCell padding="checkbox">
                        {vehicle.isPresent ? (
                          <CheckCircleIcon className="w-6 text-green-500" />
                        ) : (
                          <XCircleIcon className="w-6 text-red-500" />
                        )}
                      </TableCell>
                      <TableCell>
                        {vehicle.leavedAt && (
                          <Moment format="DD/MM/YYYY">
                            {vehicle.leavedAt}
                          </Moment>
                        )}
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </TableContainer>
          </InfiniteScroll>
        </Card>
      </div>
    </>
  );
}
